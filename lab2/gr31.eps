%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 341 284
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (C:\Users\Anna\Documents\MATLAB\MeSSI\lab2\gr31.eps)
%%CreationDate: Mon Oct 11 00:55:42 2021
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshowEmulation{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix} bind def
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/IsWord2010 { false } bind def
currentsystemparams /PrinterName known { /IsWord2010 { false currentsystemparams /PrinterName get (Access Softek) eq } bind def } if
IsWord2010 { /glyphshow { pop } bind def}{/glyphshow{glyphshowEmulation}wd }ifelse
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshowEmulation ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/xglsh{cpt 3 1 roll add exch 3 -1 roll glyphshow m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
/initmtx mtx cmtx def
%%BeginFont: /MC1_Times-New-Roman
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -223.00 def
/UnderlineThickness 100.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_Times-New-Roman def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1164 -628 4190 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 37/s37 put
Encoding 44/s44 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 52/s52 put
Encoding 54/s54 put
Encoding 56/s56 put
Encoding 120/s120 put
Encoding 121/s121 put
/BoundingBoxes 12 dict def
BoundingBoxes begin
/s32 [0 -443 512 1825] def
/s37 [0 -443 1706 1825] def
/s44 [0 -443 512 1825] def
/s48 [0 -443 1024 1825] def
/s49 [0 -443 1024 1825] def
/s50 [0 -443 1024 1825] def
/s52 [0 -443 1024 1825] def
/s54 [0 -443 1024 1825] def
/s56 [0 -443 1024 1825] def
/s120 [0 -443 1024 1825] def
/s121 [0 -443 1024 1825] def
end
/Metrics 12 dict def
 Metrics begin
/s32 512 def
/s37 1706 def
/s44 512 def
/s48 1024 def
/s49 1024 def
/s50 1024 def
/s52 1024 def
/s54 1024 def
/s56 1024 def
/s120 1024 def
/s121 1024 def
end
/CharProcs 12 dict def
CharProcs begin
/.notdef {} def
/s37 {
1392 1387 m
404 -56 1392 1387 404 -56 c
315 -56 404 -56 315 -56 c
1303 1387 315 -56 1303 1387 c
1392 1387 1303 1387 1392 1387 c
closepath 364 1387 m
454 1387 523.83 1349.67 573.5 1275 c
623.17 1200.33 648 1114.67 648 1018 c
648 902 620 812.33 564 749 c
508 685.67 440.67 654 362 654 c
309.33 654 261 668.5 217 697.5 c
173 726.5 137.83 769.67 111.5 827 c
85.17 884.33 72 948 72 1018 c
72 1088 85.33 1152.5 112 1211.5 c
138.67 1270.5 175.17 1314.5 221.5 1343.5 c
267.83 1372.5 315.33 1387 364 1387 c
closepath 361 1331 m
327 1331 296.83 1311 270.5 1271 c
244.17 1231 231 1147 231 1019 c
231 926.33 238.33 855.67 253 807 c
264.33 770.33 282 742 306 722 c
320 710 337.33 704 358 704 c
390 704 417.33 721.33 440 756 c
473.33 807.33 490 893 490 1013 c
490 1139.67 473.67 1228.67 441 1280 c
419.67 1314 393 1331 361 1331 c
closepath 1346 673 m
1393.33 673 1440.5 658 1487.5 628 c
1534.5 598 1570.83 554.33 1596.5 497 c
1622.17 439.67 1635 376.67 1635 308 c
1635 190 1606.67 99.83 1550 37.5 c
1493.33 -24.83 1426.33 -56 1349 -56 c
1300.33 -56 1253.17 -41 1207.5 -11 c
1161.83 19 1125.83 61.83 1099.5 117.5 c
1073.17 173.17 1060 236.67 1060 308 c
1060 378 1073.17 442 1099.5 500 c
1125.83 558 1161.83 601.33 1207.5 630 c
1253.17 658.67 1299.33 673 1346 673 c
closepath 1347 620 m
1315 620 1287.33 602 1264 566 c
1234 519.33 1219 431 1219 301 c
1219 181.67 1234.33 98.33 1265 51 c
1287.67 17 1315 0 1347 0 c
1377.67 0 1405 18.33 1429 55 c
1461 103.67 1477 187.33 1477 306 c
1477 431.33 1461 519 1429 569 c
1407 603 1379.67 620 1347 620 c
closepath } bind def
/s44 {
110 -341 m
110 -297 110 -341 110 -297 c
178.67 -274.33 231.83 -239.17 269.5 -191.5 c
307.17 -143.83 326 -93.33 326 -40 c
326 -27.33 323 -16.67 317 -8 c
312.33 -2 307.67 1 303 1 c
295.67 1 279.67 -5.67 255 -19 c
243 -25 230.33 -28 217 -28 c
184.33 -28 158.33 -18.33 139 1 c
119.67 20.33 110 47 110 81 c
110 113.67 122.5 141.67 147.5 165 c
172.5 188.33 203 200 239 200 c
283 200 322.17 180.83 356.5 142.5 c
390.83 104.17 408 53.33 408 -10 c
408 -78.67 384.17 -142.5 336.5 -201.5 c
288.83 -260.5 213.33 -307 110 -341 c
closepath } bind def
/s48 {
74 670 m
74 824.67 97.33 957.83 144 1069.5 c
190.67 1181.17 252.67 1264.33 330 1319 c
390 1362.33 452 1384 516 1384 c
620 1384 713.33 1331 796 1225 c
899.33 1093.67 951 915.67 951 691 c
951 533.67 928.33 400 883 290 c
837.67 180 779.83 100.17 709.5 50.5 c
639.17 0.83 571.33 -24 506 -24 c
376.67 -24 269 52.33 183 205 c
110.33 333.67 74 488.67 74 670 c
closepath 270 645 m
270 458.33 293 306 339 188 c
377 88.67 433.67 39 509 39 c
545 39 582.33 55.17 621 87.5 c
659.67 119.83 689 174 709 250 c
739.67 364.67 755 526.33 755 735 c
755 889.67 739 1018.67 707 1122 c
683 1198.67 652 1253 614 1285 c
586.67 1307 553.67 1318 515 1318 c
469.67 1318 429.33 1297.67 394 1257 c
346 1201.67 313.33 1114.67 296 996 c
278.67 877.33 270 760.33 270 645 c
closepath } bind def
/s49 {
240 1223 m
570 1384 240 1223 570 1384 c
603 1384 570 1384 603 1384 c
603 239 603 1384 603 239 c
603 163 606.17 115.67 612.5 97 c
618.83 78.33 632 64 652 54 c
672 44 712.67 38.33 774 37 c
774 0 774 37 774 0 c
264 0 774 0 264 0 c
264 37 264 0 264 37 c
328 38.33 369.33 43.83 388 53.5 c
406.67 63.17 419.67 76.17 427 92.5 c
434.33 108.83 438 157.67 438 239 c
438 971 438 239 438 971 c
438 1069.67 434.67 1133 428 1161 c
423.33 1182.33 414.83 1198 402.5 1208 c
390.17 1218 375.33 1223 358 1223 c
333.33 1223 299 1212.67 255 1192 c
240 1223 255 1192 240 1223 c
closepath } bind def
/s50 {
939 261 m
844 0 939 261 844 0 c
44 0 844 0 44 0 c
44 37 44 0 44 37 c
279.33 251.67 445 427 541 563 c
637 699 685 823.33 685 936 c
685 1022 658.67 1092.67 606 1148 c
553.33 1203.33 490.33 1231 417 1231 c
350.33 1231 290.5 1211.5 237.5 1172.5 c
184.5 1133.5 145.33 1076.33 120 1001 c
83 1001 120 1001 83 1001 c
99.67 1124.33 142.5 1219 211.5 1285 c
280.5 1351 366.67 1384 470 1384 c
580 1384 671.83 1348.67 745.5 1278 c
819.17 1207.33 856 1124 856 1028 c
856 959.33 840 890.67 808 822 c
758.67 714 678.67 599.67 568 479 c
402 297.67 298.33 188.33 257 151 c
611 151 257 151 611 151 c
683 151 733.5 153.67 762.5 159 c
791.5 164.33 817.67 175.17 841 191.5 c
864.33 207.83 884.67 231 902 261 c
939 261 902 261 939 261 c
closepath } bind def
/s52 {
953 500 m
953 358 953 500 953 358 c
771 358 953 358 771 358 c
771 0 771 358 771 0 c
606 0 771 0 606 0 c
606 358 606 0 606 358 c
32 358 606 358 32 358 c
32 486 32 358 32 486 c
661 1384 32 486 661 1384 c
771 1384 661 1384 771 1384 c
771 500 771 1384 771 500 c
953 500 771 500 953 500 c
closepath 606 500 m
606 1173 606 500 606 1173 c
130 500 606 1173 130 500 c
606 500 130 500 606 500 c
closepath } bind def
/s54 {
918 1384 m
918 1347 918 1384 918 1347 c
830 1338.33 758.17 1320.83 702.5 1294.5 c
646.83 1268.17 591.83 1228 537.5 1174 c
483.17 1120 438.17 1059.83 402.5 993.5 c
366.83 927.17 337 848.33 313 757 c
409 823 505.33 856 602 856 c
694.67 856 775 818.67 843 744 c
911 669.33 945 573.33 945 456 c
945 342.67 910.67 239.33 842 146 c
759.33 32.67 650 -24 514 -24 c
421.33 -24 342.67 6.67 278 68 c
151.33 187.33 88 342 88 532 c
88 653.33 112.33 768.67 161 878 c
209.67 987.33 279.17 1084.33 369.5 1169 c
459.83 1253.67 546.33 1310.67 629 1340 c
711.67 1369.33 788.67 1384 860 1384 c
918 1384 860 1384 918 1384 c
closepath 296 684 m
284 594 278 521.33 278 466 c
278 402 289.83 332.5 313.5 257.5 c
337.17 182.5 372.33 123 419 79 c
453 47.67 494.33 32 543 32 c
601 32 652.83 59.33 698.5 114 c
744.17 168.67 767 246.67 767 348 c
767 462 744.33 560.67 699 644 c
653.67 727.33 589.33 769 506 769 c
480.67 769 453.5 763.67 424.5 753 c
395.5 742.33 352.67 719.33 296 684 c
closepath } bind def
/s56 {
393 683 m
285.67 771 216.5 841.67 185.5 895 c
154.5 948.33 139 1003.67 139 1061 c
139 1149 173 1224.83 241 1288.5 c
309 1352.17 399.33 1384 512 1384 c
621.33 1384 709.33 1354.33 776 1295 c
842.67 1235.67 876 1168 876 1092 c
876 1041.33 858 989.67 822 937 c
786 884.33 711 822.33 597 751 c
714.33 660.33 792 589 830 537 c
880.67 469 906 397.33 906 322 c
906 226.67 869.67 145.17 797 77.5 c
724.33 9.83 629 -24 511 -24 c
382.33 -24 282 16.33 210 97 c
152.67 161.67 124 232.33 124 309 c
124 369 144.17 428.5 184.5 487.5 c
224.83 546.5 294.33 611.67 393 683 c
closepath 550 790 m
630 862 680.67 918.83 702 960.5 c
723.33 1002.17 734 1049.33 734 1102 c
734 1172 714.33 1226.83 675 1266.5 c
635.67 1306.17 582 1326 514 1326 c
446 1326 390.67 1306.33 348 1267 c
305.33 1227.67 284 1181.67 284 1129 c
284 1094.33 292.83 1059.67 310.5 1025 c
328.17 990.33 353.33 957.33 386 926 c
550 790 386 926 550 790 c
closepath 440 645 m
384.67 598.33 343.67 547.5 317 492.5 c
290.33 437.5 277 378 277 314 c
277 228 300.5 159.17 347.5 107.5 c
394.5 55.83 454.33 30 527 30 c
599 30 656.67 50.33 700 91 c
743.33 131.67 765 181 765 239 c
765 287 752.33 330 727 368 c
679.67 438.67 584 531 440 645 c
closepath } bind def
/s120 {
27 916 m
458 916 27 916 458 916 c
458 879 458 916 458 879 c
430.67 879 411.5 874.33 400.5 865 c
389.5 855.67 384 843.33 384 828 c
384 812 395.67 787.33 419 754 c
426.33 743.33 437.33 726.67 452 704 c
517 600 452 704 517 600 c
592 704 517 600 592 704 c
640 770 664 811.67 664 829 c
664 843 658.33 854.83 647 864.5 c
635.67 874.17 617.33 879 592 879 c
592 916 592 879 592 916 c
902 916 592 916 902 916 c
902 879 902 916 902 879 c
869.33 877 841 868 817 852 c
784.33 829.33 739.67 780 683 704 c
558 537 683 704 558 537 c
786 209 558 537 786 209 c
842 128.33 882 79.83 906 63.5 c
930 47.17 961 38 999 36 c
999 0 999 36 999 0 c
567 0 999 0 567 0 c
567 36 567 0 567 36 c
597 36 620.33 42.67 637 56 c
649.67 65.33 656 77.67 656 93 c
656 108.33 634.67 147 592 209 c
458 405 592 209 458 405 c
311 209 458 405 311 209 c
265.67 148.33 243 112.33 243 101 c
243 85 250.5 70.5 265.5 57.5 c
280.5 44.5 303 37.33 333 36 c
333 0 333 36 333 0 c
34 0 333 0 34 0 c
34 36 34 0 34 36 c
58 39.33 79 47.67 97 61 c
122.33 80.33 165 129.67 225 209 c
417 464 225 209 417 464 c
243 716 417 464 243 716 c
193.67 788 155.5 833.17 128.5 851.5 c
101.5 869.83 67.67 879 27 879 c
27 916 27 879 27 916 c
closepath } bind def
/s121 {
12 916 m
439 916 12 916 439 916 c
439 879 439 916 439 879 c
418 879 439 879 418 879 c
388 879 365.5 872.5 350.5 859.5 c
335.5 846.5 328 830.33 328 811 c
328 785 339 749 361 703 c
584 241 361 703 584 241 c
789 747 584 241 789 747 c
800.33 774.33 806 801.33 806 828 c
806 840 803.67 849 799 855 c
793.67 862.33 785.33 868.17 774 872.5 c
762.67 876.83 742.67 879 714 879 c
714 916 714 879 714 916 c
1012 916 714 916 1012 916 c
1012 879 1012 916 1012 879 c
987.33 876.33 968.33 871 955 863 c
941.67 855 927 840 911 818 c
905 808.67 893.67 783 877 741 c
504 -173 877 741 504 -173 c
468 -261.67 420.83 -328.67 362.5 -374 c
304.17 -419.33 248 -442 194 -442 c
154.67 -442 122.33 -430.67 97 -408 c
71.67 -385.33 59 -359.33 59 -330 c
59 -302 68.17 -279.5 86.5 -262.5 c
104.83 -245.5 130 -237 162 -237 c
184 -237 214 -244.33 252 -259 c
278.67 -269 295.33 -274 302 -274 c
322 -274 343.83 -263.67 367.5 -243 c
391.17 -222.33 415 -182.33 439 -123 c
504 36 439 -123 504 36 c
175 727 504 36 175 727 c
165 747.67 149 773.33 127 804 c
110.33 827.33 96.67 843 86 851 c
70.67 861.67 46 871 12 879 c
12 916 12 879 12 916 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_Times-New-Roman exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 340.33 283.44 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.425564 0.425308 sc

/initmtx mtx cmtx def
initmtx smtx
[1.0000 0.0000 0.0000 1.0000 0.0000 0.0000 ] concat
 [0.563976 -0 0 -0.564304 0 666.425] concat
gs
447 985 m
447 137 l
3 sw
0.502 0.502 0.502 rgb
1 sj
st
641 985 m
641 137 l
st
834 985 m
834 137 l
st
1028 985 m
1028 137 l
st
254 815 m
1221 815 l
st
254 646 m
1221 646 l
st
254 476 m
1221 476 l
st
254 307 m
1221 307 l
st
254 985 m
1221 985 l
7 sw
0 0 0 rgb
2 scap
st
351 985 m
351 968 l
0 scap
st
544 985 m
544 968 l
st
738 985 m
738 968 l
st
931 985 m
931 968 l
st
1124 985 m
1124 968 l
st
254 985 m
254 951 l
st
447 985 m
447 951 l
st
641 985 m
641 951 l
st
834 985 m
834 951 l
st
1028 985 m
1028 951 l
st
1221 985 m
1221 951 l
st
254 137 m
1221 137 l
2 scap
st
351 137 m
351 154 l
0 scap
st
544 137 m
544 154 l
st
738 137 m
738 154 l
st
931 137 m
931 154 l
st
1124 137 m
1124 154 l
st
254 137 m
254 171 l
st
447 137 m
447 171 l
st
641 137 m
641 171 l
st
834 137 m
834 171 l
st
1028 137 m
1028 171 l
st
1221 137 m
1221 171 l
st
254 985 m
254 137 l
2 scap
st
254 900 m
271 900 l
0 scap
st
254 731 m
271 731 l
st
254 561 m
271 561 l
st
254 391 m
271 391 l
st
254 222 m
271 222 l
st
254 985 m
288 985 l
st
254 815 m
288 815 l
st
254 646 m
288 646 l
st
254 476 m
288 476 l
st
254 307 m
288 307 l
st
254 137 m
288 137 l
st
1221 985 m
1221 137 l
2 scap
st
1221 900 m
1204 900 l
0 scap
st
1221 731 m
1204 731 l
st
1221 561 m
1204 561 l
st
1221 391 m
1204 391 l
st
1221 222 m
1204 222 l
st
1221 985 m
1187 985 l
st
1221 815 m
1187 815 l
st
1221 646 m
1187 646 l
st
1221 476 m
1187 476 l
st
1221 307 m
1187 307 l
st
1221 137 m
1187 137 l
st
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Times-New-Roman 58 self 240 -1067 m
(0)[28 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Times-New-Roman 58 self 418 -1067 m
(20)[28 28 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Times-New-Roman 58 self 612 -1067 m
(40)[28 28 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Times-New-Roman 58 self 805 -1067 m
(60)[28 28 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Times-New-Roman 58 self 999 -1067 m
(80)[28 28 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Times-New-Roman 58 self 1178 -1067 m
(100)[28 28 28 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Times-New-Roman 58 self 187 -1002 m
(0)[28 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Times-New-Roman 58 self 158 -832 m
(20)[28 28 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Times-New-Roman 58 self 158 -663 m
(40)[28 28 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Times-New-Roman 58 self 158 -493 m
(60)[28 28 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Times-New-Roman 58 self 158 -324 m
(80)[28 28 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Times-New-Roman 58 self 129 -154 m
(100)[28 28 28 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
pathproc 254 137 968 849 np rectpath
/eocl cland
np exec
460 932 m
655 840 l
3 sw
1 scap
st
702 805 m
744 760 l
st
779 712 m
794 689 l
st
820 635 m
849 558 l
st
869 502 m
884 459 l
st
906 404 m
940 332 l
st
967 279 m
975 265 l
st
1015 223 m
1085 180 l
st
366 951 36 36 rectfill
1085 180 m
366 951 36 36 rectstroke
415 927 36 36 rectfill
415 927 36 36 rectstroke
664 809 36 36 rectfill
664 809 36 36 rectstroke
746 720 36 36 rectfill
746 720 36 36 rectstroke
791 645 36 36 rectfill
791 645 36 36 rectstroke
842 512 36 36 rectfill
842 512 36 36 rectstroke
875 413 36 36 rectfill
875 413 36 36 rectstroke
935 287 36 36 rectfill
935 287 36 36 rectstroke
971 221 36 36 rectfill
971 221 36 36 rectstroke
1093 146 36 36 rectfill
1093 146 36 36 rectstroke
gr
gs
1 -1 sc
/MC1_Times-New-Roman 58 self 124 -70 m
(x, %)[27 14 14 47 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Times-New-Roman 58 self 1298 -1057 m
(y, %)[27 14 14 47 ] xs
1 -1 sc
gr
gr
gs
gr
Save0 restore end
showpage
%%EOF
